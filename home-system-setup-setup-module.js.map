{"version":3,"sources":["webpack:///./src/app/home/system-setup/assign-dept-gl/assign-dept-gl.component.html","webpack:///./src/app/home/system-setup/assign-dept-gl/assign-dept-gl.component.scss","webpack:///./src/app/home/system-setup/assign-dept-gl/assign-dept-gl.component.ts","webpack:///./src/app/home/system-setup/bank-branch/bank-branch.component.html","webpack:///./src/app/home/system-setup/bank-branch/bank-branch.component.scss","webpack:///./src/app/home/system-setup/bank-branch/bank-branch.component.ts","webpack:///./src/app/home/system-setup/division/division.component.html","webpack:///./src/app/home/system-setup/division/division.component.scss","webpack:///./src/app/home/system-setup/division/division.component.ts","webpack:///./src/app/home/system-setup/group/group.component.html","webpack:///./src/app/home/system-setup/group/group.component.scss","webpack:///./src/app/home/system-setup/group/group.component.ts","webpack:///./src/app/home/system-setup/holyday-calender/holyday-calender.component.html","webpack:///./src/app/home/system-setup/holyday-calender/holyday-calender.component.scss","webpack:///./src/app/home/system-setup/holyday-calender/holyday-calender.component.ts","webpack:///./src/app/home/system-setup/production-floor/production-floor.component.html","webpack:///./src/app/home/system-setup/production-floor/production-floor.component.scss","webpack:///./src/app/home/system-setup/production-floor/production-floor.component.ts","webpack:///./src/app/home/system-setup/production-line/production-line.component.html","webpack:///./src/app/home/system-setup/production-line/production-line.component.scss","webpack:///./src/app/home/system-setup/production-line/production-line.component.ts","webpack:///./src/app/home/system-setup/production-machine/production-machine.component.html","webpack:///./src/app/home/system-setup/production-machine/production-machine.component.scss","webpack:///./src/app/home/system-setup/production-machine/production-machine.component.ts","webpack:///./src/app/home/system-setup/production-unit/production-unit.component.html","webpack:///./src/app/home/system-setup/production-unit/production-unit.component.scss","webpack:///./src/app/home/system-setup/production-unit/production-unit.component.ts","webpack:///./src/app/home/system-setup/setup-routing.module.ts","webpack:///./src/app/home/system-setup/setup.module.ts"],"names":[],"mappings":"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","file":"home-system-setup-setup-module.js","sourcesContent":["module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-7 center\\\">\\r\\n              <form>\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"department\\\">Department</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                          <select class=\\\"custom-select\\\" name=\\\"department\\\" id=\\\"department\\\">\\r\\n                              <option>Select Department</option>\\r\\n                          </select>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"glDepartment\\\">GL Department</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                          <select class=\\\"custom-select\\\" name=\\\"glDepartment\\\" id=\\\"glDepartment\\\">\\r\\n                              <option>Select GL Department</option>\\r\\n                          </select>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                 \\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3 center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Assign</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>ID</th>\\r\\n                      <th>Description</th>\\r\\n                      <th>Sort Order</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL2Fzc2lnbi1kZXB0LWdsL2Fzc2lnbi1kZXB0LWdsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-assign-dept-gl',\r\n  templateUrl: './assign-dept-gl.component.html',\r\n  styleUrls: ['./assign-dept-gl.component.scss']\r\n})\r\nexport class AssignDeptGlComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Assign Department GL\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"branchName\\\">Branch Name</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"branchName\\\" id=\\\"branchName\\\" class=\\\"form-control\\\" placeholder=\\\"Branch Name\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"address\\\">Address</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <textarea class=\\\"form-control\\\" name=\\\"address\\\" id=\\\"address\\\" placeholder=\\\"Description\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"bank\\\">Bank</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"bank\\\" id=\\\"bank\\\">\\r\\n                        <option>Select Bank</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>ID</th>\\r\\n                      <th>Description</th>\\r\\n                      <th>Sort Order</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL2JhbmstYnJhbmNoL2JhbmstYnJhbmNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-bank-branch',\r\n  templateUrl: './bank-branch.component.html',\r\n  styleUrls: ['./bank-branch.component.scss']\r\n})\r\nexport class BankBranchComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Bank Branch\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"division\\\">Division</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"division\\\" id=\\\"division\\\" class=\\\"form-control\\\" placeholder=\\\"Division\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"code\\\">Code</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"code\\\" id=\\\"code\\\" class=\\\"form-control\\\" placeholder=\\\"Code\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <!-- <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button> -->\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>ID</th>\\r\\n                      <th>Description</th>\\r\\n                      <th>Sort Order</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL2RpdmlzaW9uL2RpdmlzaW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-division',\r\n  templateUrl: './division.component.html',\r\n  styleUrls: ['./division.component.scss']\r\n})\r\nexport class DivisionComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Division\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"groupName\\\">Group Name</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"groupName\\\" id=\\\"groupName\\\" class=\\\"form-control\\\" placeholder=\\\"Group Name\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"code\\\">Code</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"code\\\" id=\\\"code\\\" class=\\\"form-control\\\" placeholder=\\\"Code\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <!-- <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button> -->\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  Per page: &nbsp;\\r\\n                  <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                    class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                    <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                    class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>ID</th>\\r\\n                  <th>Description</th>\\r\\n                  <th>Sort Order</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                  <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                  <td>{{item}}</td>\\r\\n                  <td>{{item}}</td>\\r\\n                  <td>{{item}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <!-- Pagination -->\\r\\n            <div class=\\\"card-body py-0\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                  <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm pt-3\\\">\\r\\n                  <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                    (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                  </ngb-pagination>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- / Pagination -->\\r\\n          </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL2dyb3VwL2dyb3VwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.scss']\r\n})\r\nexport class GroupComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Major/Group Name\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card  section\\\">\\r\\n  <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n    {{title}}\\r\\n  </h4>\\r\\n  <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n    <form>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"form-label col-sm-3\\\">Select Month/Date</label>\\r\\n        <div class=\\\"input-group col-sm-6\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"holyday\\\" ngbDatepicker [(ngModel)]=\\\"holyday\\\"\\r\\n            [displayMonths]=\\\"1\\\" #d1=\\\"ngbDatepicker\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"input-group-text\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n              <span class=\\\"ion ion-md-calendar\\\" style=\\\"cursor: pointer;\\\"></span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n    <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              Per page: &nbsp;\\r\\n              <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Description</th>\\r\\n              <th>Sort Order</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n              <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n              <td>{{item}}</td>\\r\\n              <td>{{item}}</td>\\r\\n              <td>{{item}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <!-- Pagination -->\\r\\n        <div class=\\\"card-body py-0\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n              <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm pt-3\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- / Pagination -->\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL2hvbHlkYXktY2FsZW5kZXIvaG9seWRheS1jYWxlbmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-holyday-calender',\r\n  templateUrl: './holyday-calender.component.html',\r\n  styleUrls: ['./holyday-calender.component.scss']\r\n})\r\nexport class HolydayCalenderComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Holyday Calender\";\r\n  ngOnInit() {\r\n    this.items = [1, 2, 3,4,5,6,7];\r\n    this.update();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card  section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionUnit\\\">Production Unit</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionUnit\\\" id=\\\"productionUnit\\\">\\r\\n                        <option>Select Production Unit</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionFloor\\\">Production Floor</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"productionFloor\\\" id=\\\"productionFloor\\\" class=\\\"form-control\\\" placeholder=\\\"Production Floor\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <!-- <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th># S/N</th>\\r\\n                      <th>Production Floor</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL3Byb2R1Y3Rpb24tZmxvb3IvcHJvZHVjdGlvbi1mbG9vci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Pagination } from './../../../shared/paginate';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-production-floor',\r\n  templateUrl: './production-floor.component.html',\r\n  styleUrls: ['./production-floor.component.scss']\r\n})\r\nexport class ProductionFloorComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Production Floor\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionUnit\\\">Production Unit</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionUnit\\\" id=\\\"productionUnit\\\">\\r\\n                        <option>Select Production Unit</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionFloor\\\">Production Floor</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionFloor\\\" id=\\\"productionFloor\\\">\\r\\n                        <option>Select Production Floor</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productivityLine\\\">Productivity Line</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"productivityLine\\\" id=\\\"productivityLine\\\" class=\\\"form-control\\\" placeholder=\\\"Production Line\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <!-- <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th># S/N</th>\\r\\n                      <th>Production Line</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL3Byb2R1Y3Rpb24tbGluZS9wcm9kdWN0aW9uLWxpbmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Pagination } from './../../../shared/paginate';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-production-line',\r\n  templateUrl: './production-line.component.html',\r\n  styleUrls: ['./production-line.component.scss']\r\n})\r\nexport class ProductionLineComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Production Line\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionUnit\\\">Production Unit</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionUnit\\\" id=\\\"productionUnit\\\">\\r\\n                        <option>Select Production Unit</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionFloor\\\">Production Floor</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionFloor\\\" id=\\\"productionFloor\\\">\\r\\n                        <option>Select Production Floor</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionLine\\\">Production Line</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <select class=\\\"custom-select\\\" name=\\\"productionLine\\\" id=\\\"productionLine\\\">\\r\\n                        <option>Select Production Line</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionMachine\\\">Production Machine</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"productionMachine\\\" id=\\\"productionMachine\\\" class=\\\"form-control\\\" placeholder=\\\"Production Machine\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <!-- <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th># S/N</th>\\r\\n                      <th>Production Machine</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL3Byb2R1Y3Rpb24tbWFjaGluZS9wcm9kdWN0aW9uLW1hY2hpbmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-production-machine',\r\n  templateUrl: './production-machine.component.html',\r\n  styleUrls: ['./production-machine.component.scss']\r\n})\r\nexport class ProductionMachineComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Production Machine\";\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card section\\\">\\r\\n    <h4 class=\\\"card-header text-center bg-light\\\">\\r\\n        {{title}}\\r\\n    </h4>\\r\\n    <div class=\\\"card-body col-md-9\\\" style=\\\"margin: 0 auto\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-sm-3 text-sm-right\\\" for=\\\"productionUnit\\\">Production Unit</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"productionUnit\\\" id=\\\"productionUnit\\\" class=\\\"form-control\\\" placeholder=\\\"Production Unit\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label for=\\\"\\\" class=\\\"col-form-label col-sm-2 text-sm-right\\\"></label>\\r\\n            <div class=\\\"demo-inline-spacing mt-3\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"fas fa-save\\\"></span> Save</button>\\r\\n                <button class=\\\"btn btn-info\\\"><span class=\\\"ion ion-ios-refresh\\\"></span> Reset</button>\\r\\n                <button class=\\\"btn btn-secondary\\\"><span class=\\\"fas fa-window-close\\\"></span> Close</button>\\r\\n                <!-- <button class=\\\"btn btn-danger\\\"><span class=\\\"fas fa-trash-alt\\\"></span> Delete</button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      Per page: &nbsp;\\r\\n                      <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"update()\\\"\\r\\n                        class=\\\"custom-select custom-select-md d-inline-block w-auto\\\">\\r\\n                        <option *ngFor=\\\"let limit of [5, 10, 20, 30, 40, 50]\\\">{{limit}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"filterVal\\\" (input)=\\\"currentPage = 1; update()\\\"\\r\\n                        class=\\\"form-control form-control-md d-inline-block w-auto float-sm-right\\\" placeholder=\\\"Search...\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-hover table-striped mb-0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th># S/N</th>\\r\\n                      <th>Product Unit</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngIf=\\\"tempItems.length==0\\\">\\r\\n                      <td colspan=\\\"3\\\" class=\\\"font-italic text-center\\\">No Item available</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of tempItems\\\">\\r\\n                      <td>{{item}}</td>\\r\\n                      <td>{{item}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <!-- Pagination -->\\r\\n                <div class=\\\"card-body py-0\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm text-sm-left text-center pt-3\\\">\\r\\n                      <span class=\\\"text-muted\\\" *ngIf=\\\"totalItems\\\">Page {{ currentPage }} of {{ totalPages }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm pt-3\\\">\\r\\n                      <ngb-pagination [collectionSize]=\\\"totalItems\\\" [pageSize]=\\\"perPage\\\" [(page)]=\\\"currentPage\\\"\\r\\n                        (pageChange)=\\\"update()\\\" size=\\\"sm\\\" class=\\\"d-flex justify-content-center justify-content-sm-end m-0\\\">\\r\\n                      </ngb-pagination>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- / Pagination -->\\r\\n              </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc3lzdGVtLXNldHVwL3Byb2R1Y3Rpb24tdW5pdC9wcm9kdWN0aW9uLXVuaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../../../shared/paginate';\r\n\r\n@Component({\r\n  selector: 'app-production-unit',\r\n  templateUrl: './production-unit.component.html',\r\n  styleUrls: ['./production-unit.component.scss']\r\n})\r\nexport class ProductionUnitComponent extends Pagination implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\ntitle=\"Production Unit\"\r\n  ngOnInit() {\r\n    this.items = [];\r\n  }\r\n\r\n}\r\n","import { ProductionFloorComponent } from './production-floor/production-floor.component';\r\nimport { AssignDeptGlComponent } from './assign-dept-gl/assign-dept-gl.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BankBranchComponent } from './bank-branch/bank-branch.component';\r\nimport { DivisionComponent } from './division/division.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { HolydayCalenderComponent } from './holyday-calender/holyday-calender.component';\r\nimport { ProductionUnitComponent } from './production-unit/production-unit.component';\r\nimport { ProductionLineComponent } from './production-line/production-line.component';\r\nimport { ProductionMachineComponent } from './production-machine/production-machine.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([\r\n    { path: 'bank-branch', component: BankBranchComponent },\r\n    { path: 'division', component: DivisionComponent },\r\n    { path: 'group', component: GroupComponent },\r\n    { path: 'holyday-calender', component: HolydayCalenderComponent },\r\n    { path: 'assign-dept-gl', component: AssignDeptGlComponent },\r\n    { path: 'production-unit', component: ProductionUnitComponent },\r\n    { path: 'production-floor', component: ProductionFloorComponent },\r\n    { path: 'production-line', component: ProductionLineComponent },\r\n    { path: 'production-machine', component: ProductionMachineComponent }\r\n  ])],\r\n\r\n  exports: [RouterModule]\r\n})\r\nexport class SetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BankBranchComponent } from './bank-branch/bank-branch.component';\r\nimport { SetupRoutingModule } from './setup-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { ChartsModule as Ng2ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { DivisionComponent } from './division/division.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { HolydayCalenderComponent } from './holyday-calender/holyday-calender.component';\r\nimport { AssignDeptGlComponent } from './assign-dept-gl/assign-dept-gl.component';\r\nimport { ProductionUnitComponent } from './production-unit/production-unit.component';\r\nimport { ProductionFloorComponent } from './production-floor/production-floor.component';\r\nimport { ProductionLineComponent } from './production-line/production-line.component';\r\nimport { ProductionMachineComponent } from './production-machine/production-machine.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    Ng2ChartsModule,\r\n    PerfectScrollbarModule,\r\n    SetupRoutingModule\r\n  ],\r\n  declarations: [\r\n    BankBranchComponent,\r\n    DivisionComponent,\r\n    GroupComponent,\r\n    HolydayCalenderComponent,\r\n    AssignDeptGlComponent,\r\n    ProductionUnitComponent,\r\n    ProductionFloorComponent,\r\n    ProductionLineComponent,\r\n    ProductionMachineComponent\r\n  ]\r\n})\r\nexport class SetupModule { }\r\n"],"sourceRoot":""}